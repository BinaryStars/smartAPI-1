<!DOCTYPE html>
<head>
        <!-- dependencies (jquery, handlebars and bootstrap) -->
        <script type="text/javascript" src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
        <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/handlebars.js/1.3.0/handlebars.min.js"></script>
        <link type="text/css" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css" rel="stylesheet"/>
        <script type="text/javascript" src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>

        <!-- alpaca -->
        <link type="text/css" href="http://code.cloudcms.com/alpaca/1.5.8/bootstrap/alpaca.min.css" rel="stylesheet"/>
        <script type="text/javascript" src="http://code.cloudcms.com/alpaca/1.5.8/bootstrap/alpaca.min.js"></script>
</head>
<body>
<div id="form1" style="width: 50%;"></div>


<script>
var listOfStrings = ["name", "description", "version", "keywords"];

function containsObject(obj, list) {
    var i;
    for (i = 0; i < list.length; i++) {
        if (list[i] === obj) {
            return true;
        }
    }

    return false;
}

function convertOutput(value) {
    for (x in value) {
        console.log(x);
        if (listOfStrings.indexOf(x) < 0) {
            value[x] = {"@id": value[x]};
        }
    }

    return value;
}
</script>
    
    
    
    
<script type="text/javascript">
$("#form1").alpaca({
    "type": "create",
    "schema": {
        "id": "#leaf",
        "title": "Describe your API",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "title": "Name - dct:title (xsd:string)",
                "required": true
            },
            "description": {
                "type": "string",
                "title": "Description - dct:description (xsd:string)",
                "required": false
            },
            "version": {
                "type": "string",
                "title": "Version - pav:version (xsd:string)",
                "required": false
            },
            "logo": {
                "type": "string",
                "title": "Logo - schema:logo (IRI)",
                "required": false
            },
            "publisher": {
                "type": "string",
                "title": "Publisher - dct:publisher (IRI)",
                "required": true
            },
            "homepage": {
                "type": "string",
                "title": "Homepage - foaf:page (IRI)",
                "required" : true
            },
            "documentationPage": {
                "type": "string",
                "title": "Documentation - documentation (IRI)",
                "required": false
            },
            "termsOfUsePage": {
                "type": "string",
                "title": "Terms Of Use - termsOfUsePage (IRI)",
                "required": true
            },
            "sourceCodeURL": {
                "type": "string",
                "title": "Source Code URL - sourceCodeURL (IRI)",
                "required": false
            },
            "publication": {
                "type": "string",
                "title": "Publication - ids:pubmed (IRI)",
                "required": false
            },
            "keywords": {
                "type": "array",
                "title": "Keywords - dcat:keyword (xsd:string)",
                "items": {
                    "$ref": "#leaf"
                }
            },
            "services": {
                "id": "#plant",
                "type": "array",
                "title": "Services",
                "items": {
                    "type": "object",
                    "properties": {
                        "title": {
                            "type": "string",
                            "title": "Name",
                            "required": true
                        },
                        "description": {
                            "type": "string",
                            "title": "Description",
                            "required": true
                        }
                    }
                }
            }
        }
    },
    "options": {
        "form": {
            "buttons": {
                "submit": {
                    "title": "Serialize",
                    "click": function() {
                        var value = this.getValue();
                        //alert(JSON.stringify(value, null, "  "));
                        console.log(value);
                        console.log(JSON.stringify(convertOutput(value), null, "  "));
                    }
                }
            }
        }
    }
});
</script>


</body>
</html>