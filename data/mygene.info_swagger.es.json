{
  "host": "mygene.info",
  "operations": [
    {
      "responses": [
        {
          "description": "Successful response",
          "schema": {
            "properties": {
              "max_score": {
                "type": "integer"
              },
              "took": {
                "type": "integer"
              },
              "hits": {
                "items": {
                  "properties": {
                    "taxid": {
                      "type": "integer"
                    },
                    "_id": {
                      "type": "integer"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "entrezgene": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "total": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "httpCode": 200
        }
      ],
      "httpOperation": "get",
      "operationId": "queryGene",
      "path": "/query",
      "description": "Make gene query and return matching gene list. Support JSONP and CORS as well.",
      "parameters": [
        {
          "format": "string",
          "type": "string",
          "description": "Query string. Examples \"CDK2\", \"NM_052827\", \"204639_at\". The detailed query syntax can be found at http://docs.mygene.info/en/latest/doc/query_service.html",
          "name": "q",
          "in": "query",
          "required": true
        },
        {
          "description": "A comma-separated field to limit the fields returned from the matching gene hits. The supported field names can be found from any gene object (e.g. http://mygene.info/v2/gene/1017). Note that it supports dot notation as well, e.g., you can pass \"refseq.rna\". If \"fields=all\", all available fields will be returned. Default \"symbol,name,taxid,entrezgene,ensemblgene\".",
          "name": "fields",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "can be used to limit the gene hits from given species. You can use \"common names\" for nine common species (human, mouse, rat, fruitfly, nematode, zebrafish, thale-cress, frog and pig). All other species, you can provide their taxonomy ids. Multiple species can be passed using comma as a separator. Passing \u201call\u201d will query against all available species. Default human,mouse,rat.",
          "name": "species",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "the maximum number of matching gene hits to return (with a cap of 1000 at the moment). Default 10.",
          "name": "size",
          "type": "integer",
          "required": false,
          "in": "query"
        },
        {
          "description": "the number of matching gene hits to skip, starting from 0. Combining with \"size\" parameter, this can be useful for paging. Default 0.",
          "name": "from",
          "type": "integer",
          "required": false,
          "in": "query"
        },
        {
          "description": "comma-separated fields to sort on. Prefix with \"-\" for descending order, otherwise in ascending order. Sort by matching scores in decending order.",
          "name": "sort",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "a single field or comma-separated fields to return facets, for example, \u201cfacets=taxid\u201d, \u201cfacets=taxid,type_of_gene\u201d.",
          "name": "facets",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "relevant when faceting on species (i.e., \u201cfacets=taxid\u201d are passed). It\u2019s used to pass species filter without changing the scope of faceting, so that the returned facet counts won\u2019t change. Either species name or taxonomy id can be used, just like \u201cspecies\u201d parameter above.",
          "name": "species_facet_filter",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "when passed as \u201ctrue\u201d or \u201c1\u201d, the query returns only the hits with valid Entrez gene ids. Default: false",
          "name": "entrezonly",
          "type": "boolean",
          "required": false,
          "in": "query"
        },
        {
          "description": "when passed as \u201ctrue\u201d or \u201c1\u201d, the query returns only the hits with valid Ensembl gene ids. Default: false.",
          "name": "ensemblonly",
          "type": "boolean",
          "required": false,
          "in": "query"
        },
        {
          "description": "you can pass a \"callback\" parameter to make a JSONP call.",
          "name": "callback",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "control the format of the returned fields when passed \"fields\" parameter contains dot notation, e.g. \"fields=refseq.rna\". If \"true\" or \"1\", the returned data object contains a single \"refseq.rna\" field, otherwise (\"false\" or \"0\"), a single \"refseq\" field with a sub-field of \"rna\". Default: true",
          "name": "dotfield",
          "type": "boolean",
          "in": "query"
        },
        {
          "description": "alias for \"fields\" parameter.",
          "name": "filter",
          "type": "string",
          "in": "query"
        },
        {
          "description": "alias for \"size\" parameter.",
          "name": "limit",
          "type": "integer",
          "in": "query"
        },
        {
          "description": "alias for \"from\" parameter.",
          "name": "skip",
          "type": "integer",
          "in": "query"
        },
        {
          "description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you.",
          "name": "email",
          "type": "string",
          "in": "query"
        }
      ],
      "tags": [
        "query"
      ]
    },
    {
      "responses": [
        {
          "description": "Successful response",
          "schema": {
            "items": {
              "properties": {
                "symbol": {
                  "type": "string"
                },
                "entrezgene": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "_id": {
                  "type": "integer"
                },
                "query": {
                  "type": "string"
                },
                "taxid": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "httpCode": 200
        }
      ],
      "httpOperation": "post",
      "operationId": "queryGenes",
      "path": "/query",
      "description": "Make gene queries in batch.\n",
      "parameters": [
        {
          "description": "multiple query terms seperated by comma (also support \"+\" or white space), but no wildcard, e.g., \"q=1017,1018\" or \"q=CDK2+BTK\"",
          "name": "q",
          "type": "string",
          "required": true,
          "in": "query"
        },
        {
          "description": "specify one or more fields (separated by comma) as the search \"scopes\", e.g., \"scopes=entrezgene\", \"scopes=entrezgene,ensemblgene\". The available \"fields\" can be passed to \"scopes\" parameter are listed at http://mygene.info/doc/query_service.html#available-fields. Default \"scopes=entrezgene,ensemblgene,retired\" (either Entrez or Ensembl gene ids).",
          "name": "scopes",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "a comma-separated fields to limit the fields returned from the matching gene hits. The supported field names can be found from any gene object (e.g. http://mygene.info/v2/gene/1017). Note that it supports dot notation as well, e.g., you can pass \"refseq.rna\". If \"fields=all\", all available fields will be returned. Default \"symbol,name,taxid,entrezgene,ensemblgene\".",
          "name": "fields",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "can be used to limit the gene hits from given species. You can use \"common names\" for nine common species (human, mouse, rat, fruitfly, nematode, zebrafish, thale-cress, frog and pig). All other species, you can provide their taxonomy ids. Multiple species can be passed using comma as a separator. Default human,mouse,rat.",
          "name": "species",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "control the format of the returned fields when passed \"fields\" parameter contains dot notation, e.g. \"fields=refseq.rna\". If \"true\" or \"1\", the returned data object contains a single \"refseq.rna\" field, otherwise (\"false\" or \"0\"), a single \"refseq\" field with a sub-field of \"rna\". Default true.",
          "name": "dotfield",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you.",
          "name": "email",
          "type": "string",
          "required": false,
          "in": "query"
        }
      ],
      "tags": [
        "query"
      ]
    },
    {
      "responses": [
        {
          "description": "Successful response",
          "schema": {
            "properties": {
              "alias": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "summary": {
                "type": "string"
              },
              "pharmgkb": {
                "type": "string"
              },
              "exons": {
                "type": "object"
              },
              "genomic_pos_hg19": {
                "properties": {
                  "chr": {
                    "type": "integer"
                  },
                  "start": {
                    "type": "integer"
                  },
                  "end": {
                    "type": "integer"
                  },
                  "strand": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "unigene": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "HPRD": {
                "type": "integer"
              },
              "pathway": {
                "properties": {
                  "kegg": {
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "biocarta": {
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "wikipathways": {
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "pid": {
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "reactome": {
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "netpath": {
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "taxid": {
                "type": "integer"
              },
              "genomic_pos": {
                "properties": {
                  "chr": {
                    "type": "integer"
                  },
                  "start": {
                    "type": "integer"
                  },
                  "end": {
                    "type": "integer"
                  },
                  "strand": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "prosite": {
                "type": "string"
              },
              "interpro": {
                "items": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "short_desc": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "refseq": {
                "properties": {
                  "genomic": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "protein": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "rna": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "Vega": {
                "type": "string"
              },
              "homologene": {
                "properties": {
                  "genes": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "ensembl": {
                "properties": {
                  "gene": {
                    "type": "string"
                  },
                  "transcript": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "type_of_gene": {
                "type": "string"
              },
              "MIM": {
                "type": "integer"
              },
              "ipi": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "entrezgene": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "pir": {
                "type": "string"
              },
              "accession": {
                "properties": {
                  "genomic": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "protein": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "rna": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "wikipedia": {
                "properties": {
                  "url_stub": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "symbol": {
                "type": "string"
              },
              "HGNC": {
                "type": "integer"
              },
              "pfam": {
                "type": "string"
              },
              "uniprot": {
                "properties": {
                  "Swiss-Prot": {
                    "type": "string"
                  },
                  "TrEMBL": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "map_location": {
                "type": "string"
              },
              "reagent": {
                "properties": {
                  "GNF_hs-ORFeome1_1_reads": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "relationonship": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "GNF_hs-druggable_lenti-shRNA": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "relationonship": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "NOVART_hs-genome_siRNA": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "relationonship": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "GNF_hs_LentiORF-Jred": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "relationonship": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "Invitrogen_IVTHSSIPKv2": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "relationonship": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "GNF_hs_LentiORF-HA-MYC": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "relationship": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "GNF_hs-Origene": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "relationonship": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "GNF_hs-druggable_plasmid-shRNA": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "relationonship": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "NIBRI_hs-Secretome_pDEST": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "relationship": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "GNF_mm+hs-MGC": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "relationonship": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "GNF_hs-pkinase_IDT-siRNA": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "relationonship": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "GNF_Qia_hs-genome_v1_siRNA": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "relationonship": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "GNF_hs-druggable_siRNA": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "relationonship": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "_id": {
                "type": "string"
              },
              "reporter": {
                "properties": {
                  "HuEx-1_0": {
                    "type": "integer"
                  },
                  "HTA-2_0": {
                    "type": "string"
                  },
                  "HuGene-2_1": {
                    "type": "integer"
                  },
                  "HuGene-1_1": {
                    "type": "integer"
                  },
                  "HG-U95Av2": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "HG-U133_Plus_2": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "pdb": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "go": {
                "properties": {
                  "BP": {
                    "items": {
                      "properties": {
                        "term": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "evidence": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "CC": {
                    "items": {
                      "properties": {
                        "term": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "evidence": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "MF": {
                    "items": {
                      "properties": {
                        "term": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "evidence": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "generif": {
                "items": {
                  "properties": {
                    "pubmed": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "ec": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "httpCode": 200
        }
      ],
      "httpOperation": "get",
      "operationId": "getAnnotation",
      "path": "/gene/{geneid}",
      "description": "Retrieve gene annotation based on Entrez or Ensembl gene id, support\nJSONP and CORS as well.\n",
      "parameters": [
        {
          "description": "Entrez or Ensembl gene id, e.g., 1017, ENSG00000170248. A retired Entrez Gene id works too if it is replaced by a new one, e.g., 245794",
          "name": "geneid",
          "type": "string",
          "required": true,
          "in": "path"
        },
        {
          "description": "a comma-separated fields to limit the fields returned from the matching gene hits. The supported field names can be found from any gene object (e.g. http://mygene.info/v2/gene/1017). Note that it supports dot notation as well, e.g., you can pass \"refseq.rna\". If \"fields=all\", all available fields will be returned. Default \"symbol,name,taxid,entrezgene,ensemblgene\".",
          "name": "fields",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "you can pass a \"callback\" parameter to make a JSONP call.",
          "name": "callback",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "alias for \"fields\" parameter.",
          "name": "filter",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "control the format of the returned fields when passed \"fields\" parameter contains dot notation, e.g. \"fields=refseq.rna\". If \"true\" or \"1\", the returned data object contains a single \"refseq.rna\" field, otherwise (\"false\" or \"0\"), a single \"refseq\" field with a sub-field of \"rna\". Default true.",
          "name": "dotfield",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you.",
          "name": "email",
          "type": "string",
          "required": false,
          "in": "query"
        }
      ],
      "tags": [
        "gene"
      ]
    },
    {
      "responses": [
        {
          "description": "Successful response",
          "schema": {
            "properties": {
              "source": {
                "type": "string"
              },
              "genome_assembly": {
                "properties": {
                  "mouse": {
                    "type": "string"
                  },
                  "frog": {
                    "type": "string"
                  },
                  "nematode": {
                    "type": "string"
                  },
                  "zebrafish": {
                    "type": "string"
                  },
                  "rat": {
                    "type": "string"
                  },
                  "pig": {
                    "type": "string"
                  },
                  "human": {
                    "type": "string"
                  },
                  "fruitfly": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "stats": {
                "properties": {
                  "total_ensembl_genes": {
                    "type": "integer"
                  },
                  "total_ensembl_only_genes": {
                    "type": "integer"
                  },
                  "total_ensembl_genes_mapped_to_entrez": {
                    "type": "integer"
                  },
                  "total_genes": {
                    "type": "integer"
                  },
                  "total_species": {
                    "type": "integer"
                  },
                  "total_entrez_genes": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "taxonomy": {
                "properties": {
                  "mouse": {
                    "type": "integer"
                  },
                  "frog": {
                    "type": "integer"
                  },
                  "rat": {
                    "type": "integer"
                  },
                  "nematode": {
                    "type": "integer"
                  },
                  "zebrafish": {
                    "type": "integer"
                  },
                  "thale-cress\"": {
                    "type": "integer"
                  },
                  "pig": {
                    "type": "integer"
                  },
                  "human": {
                    "type": "integer"
                  },
                  "fruitfly": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "available_fields": {
                "type": "string"
              },
              "timestamp": {
                "type": "string"
              },
              "src_version": {
                "properties": {
                  "ensembl": {
                    "type": "integer"
                  },
                  "cpdb": {
                    "type": "integer"
                  },
                  "uniprot": {
                    "type": "integer"
                  },
                  "pharmgkb": {
                    "type": "integer"
                  },
                  "netaffy": {
                    "type": "string"
                  },
                  "refseq": {
                    "type": "integer"
                  },
                  "ucsc": {
                    "type": "integer"
                  },
                  "entrez": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "app_revision": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "httpCode": 200
        }
      ],
      "httpOperation": "get",
      "operationId": "getMetadata",
      "path": "/metadata",
      "description": "Get metadata about the data available from MyGene.info\n",
      "parameters": [
        {
          "description": "you can pass a \"callback\" parameter to make a JSONP call.",
          "name": "callback",
          "type": "string",
          "required": false,
          "in": "query"
        }
      ],
      "tags": [
        "metadata"
      ]
    },
    {
      "responses": [
        {
          "description": "Successful response",
          "schema": {
            "items": {
              "properties": {
                "symbol": {
                  "type": "string"
                },
                "entrezgene": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "_id": {
                  "type": "string"
                },
                "query": {
                  "type": "string"
                },
                "taxid": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "httpCode": 200
        }
      ],
      "httpOperation": "post",
      "operationId": "getGenes",
      "path": "/gene",
      "description": "Make gene queries in batch for a list of Entrez or Ensembl gene ids.\n",
      "parameters": [
        {
          "description": "multiple geneids seperated by comma, e.g., \"ids=1017,1018\" or \"ids=695,ENSG00000123374\". Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted.",
          "name": "ids",
          "type": "string",
          "required": true,
          "in": "query"
        },
        {
          "description": "a comma-separated fields to limit the fields returned from the matching gene hits. The supported field names can be found from any gene object (e.g. http://mygene.info/v2/gene/1017). Note that it supports dot notation as well, e.g., you can pass \"refseq.rna\". If \"fields=all\", all available fields will be returned. Default \"symbol,name,taxid,entrezgene,ensemblgene\".",
          "name": "fields",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "Optional, can be used to limit the gene hits from given species. You can use \"common names\" for nine common species (human, mouse, rat, fruitfly, nematode, zebrafish, thale-cress, frog and pig). All other species, you can provide their taxonomy ids. Multiple species can be passed using comma as a separator. Default all.",
          "name": "species",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "control the format of the returned fields when passed \"fields\" parameter contains dot notation, e.g. \"fields=refseq.rna\". If \"true\" or \"1\", the returned data object contains a single \"refseq.rna\" field, otherwise (\"false\" or \"0\"), a single \"refseq\" field with a sub-field of \"rna\". Default true.",
          "name": "dotfield",
          "type": "string",
          "required": false,
          "in": "query"
        },
        {
          "description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you.",
          "name": "email",
          "type": "string",
          "required": false,
          "in": "query"
        }
      ],
      "tags": [
        "gene"
      ]
    }
  ],
  "info": {
    "description": "Documentation of the MyGene.info Gene Query web services. Learn more about [MyGene.info](http://mygene.info/)",
    "title": "MyGene.info API",
    "version": "2.0.0"
  },
  "swagger": "2.0",
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/v2",
  "tags": [
    {
      "description": "Query for gene information",
      "name": "query"
    },
    {
      "description": "Gene annotation information",
      "name": "gene"
    },
    {
      "description": "Metadata about the data available from MyGene.info.",
      "name": "metadata"
    }
  ]
}